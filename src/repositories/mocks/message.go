// Code generated by MockGen. DO NOT EDIT.
// Source: ./src/repositories/message.go

// Package mock_repositories is a generated GoMock package.
package mock_repositories

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/playneta/go-sessions/src/models"
	reflect "reflect"
)

// MockMessage is a mock of Message interface
type MockMessage struct {
	ctrl     *gomock.Controller
	recorder *MockMessageMockRecorder
}

// MockMessageMockRecorder is the mock recorder for MockMessage
type MockMessageMockRecorder struct {
	mock *MockMessage
}

// NewMockMessage creates a new mock instance
func NewMockMessage(ctrl *gomock.Controller) *MockMessage {
	mock := &MockMessage{ctrl: ctrl}
	mock.recorder = &MockMessageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMessage) EXPECT() *MockMessageMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockMessage) Create(message *models.Message) error {
	ret := m.ctrl.Call(m, "Create", message)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create
func (mr *MockMessageMockRecorder) Create(message interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockMessage)(nil).Create), message)
}

// LastPublicMessages mocks base method
func (m *MockMessage) LastPublicMessages(limit int) ([]models.Message, error) {
	ret := m.ctrl.Call(m, "LastPublicMessages", limit)
	ret0, _ := ret[0].([]models.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LastPublicMessages indicates an expected call of LastPublicMessages
func (mr *MockMessageMockRecorder) LastPublicMessages(limit interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LastPublicMessages", reflect.TypeOf((*MockMessage)(nil).LastPublicMessages), limit)
}

// LastPrivateMessages mocks base method
func (m *MockMessage) LastPrivateMessages(user models.User, limit int) ([]models.Message, error) {
	ret := m.ctrl.Call(m, "LastPrivateMessages", user, limit)
	ret0, _ := ret[0].([]models.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LastPrivateMessages indicates an expected call of LastPrivateMessages
func (mr *MockMessageMockRecorder) LastPrivateMessages(user, limit interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LastPrivateMessages", reflect.TypeOf((*MockMessage)(nil).LastPrivateMessages), user, limit)
}
